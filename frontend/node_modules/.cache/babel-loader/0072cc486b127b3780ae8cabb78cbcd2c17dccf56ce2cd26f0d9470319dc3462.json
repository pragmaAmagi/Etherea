{"ast":null,"code":"var _jsxFileName = \"/home/pragami/New Game/frontend/src/components/ResetGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { resetGame } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetButton = styled.button`\n  background-color: ${props => props.theme.colors.error};\n  color: ${props => props.theme.colors.white};\n  padding: ${props => props.theme.space.small} ${props => props.theme.space.medium};\n  border: none;\n  border-radius: ${props => props.theme.borderRadius};\n  cursor: pointer;\n  margin-top: ${props => props.theme.space.large};\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n_c = ResetButton;\nconst Message = styled.p`\n  color: ${props => props.success ? props.theme.colors.secondary : props.theme.colors.error};\n  margin-top: ${props => props.theme.space.small};\n`;\n_c2 = Message;\nfunction ResetGame() {\n  _s();\n  const [message, setMessage] = useState(null);\n  const handleResetGame = async () => {\n    try {\n      const result = await resetGame();\n      console.log('Game reset result:', result);\n      setMessage('Game reset successfully');\n    } catch (error) {\n      console.error('Error resetting game:', error);\n      setMessage('Failed to reset game. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ResetButton, {\n      onClick: handleResetGame,\n      children: \"Reset Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n      success: message.includes('successfully'),\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(ResetGame, \"oxT8SEz5FIjvFP5ix50Ku0sapH4=\");\n_c3 = ResetGame;\nexport default ResetGame;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ResetButton\");\n$RefreshReg$(_c2, \"Message\");\n$RefreshReg$(_c3, \"ResetGame\");","map":{"version":3,"names":["React","useState","styled","resetGame","jsxDEV","_jsxDEV","ResetButton","button","props","theme","colors","error","white","space","small","medium","borderRadius","large","_c","Message","p","success","secondary","_c2","ResetGame","_s","message","setMessage","handleResetGame","result","console","log","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","includes","_c3","$RefreshReg$"],"sources":["/home/pragami/New Game/frontend/src/components/ResetGame.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { resetGame } from '../services/api';\n\nconst ResetButton = styled.button`\n  background-color: ${props => props.theme.colors.error};\n  color: ${props => props.theme.colors.white};\n  padding: ${props => props.theme.space.small} ${props => props.theme.space.medium};\n  border: none;\n  border-radius: ${props => props.theme.borderRadius};\n  cursor: pointer;\n  margin-top: ${props => props.theme.space.large};\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst Message = styled.p`\n  color: ${props => props.success ? props.theme.colors.secondary : props.theme.colors.error};\n  margin-top: ${props => props.theme.space.small};\n`;\n\nfunction ResetGame() {\n    const [message, setMessage] = useState(null);\n\n    const handleResetGame = async () => {\n        try {\n            const result = await resetGame();\n            console.log('Game reset result:', result);\n            setMessage('Game reset successfully');\n        } catch (error) {\n            console.error('Error resetting game:', error);\n            setMessage('Failed to reset game. Please try again.');\n        }\n    };\n\n    return (\n        <div>\n            <ResetButton onClick={handleResetGame}>Reset Game</ResetButton>\n            {message && <Message success={message.includes('successfully')}>{message}</Message>}\n        </div>\n    );\n}\n\nexport default ResetGame;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,WAAW,GAAGJ,MAAM,CAACK,MAAM;AACjC,sBAAsBC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACC,KAAK;AACvD,WAAWH,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACE,KAAK;AAC5C,aAAaJ,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACI,KAAK,CAACC,KAAK,IAAIN,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACI,KAAK,CAACE,MAAM;AAClF;AACA,mBAAmBP,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACO,YAAY;AACpD;AACA,gBAAgBR,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACI,KAAK,CAACI,KAAK;AAChD;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAZIZ,WAAW;AAcjB,MAAMa,OAAO,GAAGjB,MAAM,CAACkB,CAAC;AACxB,WAAWZ,KAAK,IAAIA,KAAK,CAACa,OAAO,GAAGb,KAAK,CAACC,KAAK,CAACC,MAAM,CAACY,SAAS,GAAGd,KAAK,CAACC,KAAK,CAACC,MAAM,CAACC,KAAK;AAC3F,gBAAgBH,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACI,KAAK,CAACC,KAAK;AAChD,CAAC;AAACS,GAAA,GAHIJ,OAAO;AAKb,SAASK,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAM2B,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACA,MAAMC,MAAM,GAAG,MAAM1B,SAAS,CAAC,CAAC;MAChC2B,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,MAAM,CAAC;MACzCF,UAAU,CAAC,yBAAyB,CAAC;IACzC,CAAC,CAAC,OAAOhB,KAAK,EAAE;MACZmB,OAAO,CAACnB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CgB,UAAU,CAAC,yCAAyC,CAAC;IACzD;EACJ,CAAC;EAED,oBACItB,OAAA;IAAA2B,QAAA,gBACI3B,OAAA,CAACC,WAAW;MAAC2B,OAAO,EAAEL,eAAgB;MAAAI,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,EAC9DX,OAAO,iBAAIrB,OAAA,CAACc,OAAO;MAACE,OAAO,EAAEK,OAAO,CAACY,QAAQ,CAAC,cAAc,CAAE;MAAAN,QAAA,EAAEN;IAAO;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClF,CAAC;AAEd;AAACZ,EAAA,CApBQD,SAAS;AAAAe,GAAA,GAATf,SAAS;AAsBlB,eAAeA,SAAS;AAAC,IAAAN,EAAA,EAAAK,GAAA,EAAAgB,GAAA;AAAAC,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAAjB,GAAA;AAAAiB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}