{"ast":null,"code":"var _jsxFileName = \"/home/pragami/New Game/frontend/src/components/GameState.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { getGameState } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameStateContainer = styled.div`\n  background-color: ${props => props.theme.colors.componentBackground};\n  border: 1px solid ${props => props.theme.colors.border};\n  border-radius: ${props => props.theme.borderRadius};\n  padding: ${props => props.theme.space.large};\n  margin-bottom: ${props => props.theme.space.large};\n  box-shadow: ${props => props.theme.boxShadow};\n`;\n_c = GameStateContainer;\nconst Title = styled.h2`\n  color: ${props => props.theme.colors.primary};\n  margin-bottom: ${props => props.theme.space.medium};\n`;\n_c2 = Title;\nconst Score = styled.p`\n  font-size: ${props => props.theme.fontSizes.large};\n  font-weight: bold;\n  color: ${props => props.theme.colors.secondary};\n`;\n_c3 = Score;\nconst StateItem = styled.p`\n  margin-bottom: ${props => props.theme.space.small};\n`;\n_c4 = StateItem;\nfunction GameState() {\n  _s();\n  const [gameState, setGameState] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchGameState = async () => {\n      try {\n        const response = await getGameState();\n        setGameState(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to fetch game state');\n        setLoading(false);\n      }\n    };\n    fetchGameState();\n    // Set up polling or WebSocket connection here if you want real-time updates\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(GameStateContainer, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading game state...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 45\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(GameStateContainer, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 43\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(GameStateContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Game State\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Score, {\n      children: [\"Community Score: \", gameState.communityScore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StateItem, {\n      children: [\"Current Round: \", gameState.currentRound]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StateItem, {\n      children: [\"Active Players: \", gameState.activePlayers]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StateItem, {\n      children: [\"Time Remaining: \", gameState.timeRemaining]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(GameState, \"tTzy60vGpcTN5Rm9+yIpzt+SeP8=\");\n_c5 = GameState;\nexport default GameState;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"GameStateContainer\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"Score\");\n$RefreshReg$(_c4, \"StateItem\");\n$RefreshReg$(_c5, \"GameState\");","map":{"version":3,"names":["React","useState","useEffect","styled","getGameState","jsxDEV","_jsxDEV","GameStateContainer","div","props","theme","colors","componentBackground","border","borderRadius","space","large","boxShadow","_c","Title","h2","primary","medium","_c2","Score","p","fontSizes","secondary","_c3","StateItem","small","_c4","GameState","_s","gameState","setGameState","loading","setLoading","error","setError","fetchGameState","response","data","err","children","fileName","_jsxFileName","lineNumber","columnNumber","communityScore","currentRound","activePlayers","timeRemaining","_c5","$RefreshReg$"],"sources":["/home/pragami/New Game/frontend/src/components/GameState.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { getGameState } from '../services/api';\n\nconst GameStateContainer = styled.div`\n  background-color: ${props => props.theme.colors.componentBackground};\n  border: 1px solid ${props => props.theme.colors.border};\n  border-radius: ${props => props.theme.borderRadius};\n  padding: ${props => props.theme.space.large};\n  margin-bottom: ${props => props.theme.space.large};\n  box-shadow: ${props => props.theme.boxShadow};\n`;\n\nconst Title = styled.h2`\n  color: ${props => props.theme.colors.primary};\n  margin-bottom: ${props => props.theme.space.medium};\n`;\n\nconst Score = styled.p`\n  font-size: ${props => props.theme.fontSizes.large};\n  font-weight: bold;\n  color: ${props => props.theme.colors.secondary};\n`;\n\nconst StateItem = styled.p`\n  margin-bottom: ${props => props.theme.space.small};\n`;\n\nfunction GameState() {\n    const [gameState, setGameState] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchGameState = async () => {\n            try {\n                const response = await getGameState();\n                setGameState(response.data);\n                setLoading(false);\n            } catch (err) {\n                setError('Failed to fetch game state');\n                setLoading(false);\n            }\n        };\n\n        fetchGameState();\n        // Set up polling or WebSocket connection here if you want real-time updates\n    }, []);\n\n    if (loading) return <GameStateContainer><p>Loading game state...</p></GameStateContainer>;\n    if (error) return <GameStateContainer><p>Error: {error}</p></GameStateContainer>;\n\n    return (\n        <GameStateContainer>\n            <Title>Game State</Title>\n            <Score>Community Score: {gameState.communityScore}</Score>\n            <StateItem>Current Round: {gameState.currentRound}</StateItem>\n            <StateItem>Active Players: {gameState.activePlayers}</StateItem>\n            <StateItem>Time Remaining: {gameState.timeRemaining}</StateItem>\n        </GameStateContainer>\n    );\n}\n\nexport default GameState;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}